Q1. Given a binary string A. It is allowed to do at most one swap between any 0 and 1. Find and return the length of the longest consecutive 1’s that can be achieved.

    Constraints
    1 <= length of string <= 1000000
    A contains only characters 0 and 1.

    eg. Input 1:
        A = "111000"
        Output 1:
        3

    Input 2:
    A: 111011101
    Output 3
    Swap 3rd with 7th element to get 7 ones.

    Idea: iterate over array and find the zero, once found zero then iterate in left get count of alternate zeros and iterate on right and get consecutive ones.
    If left ones count and right ones count is equal to total ones count in array then return left ones count plus right ones count as there is no extra one to swap.
    if left ones count plus right ones count is less than total ones count then return left ones count plus right ones count plus one as we can swap one zero with one.

Q2. You are given an array A consisting of heights of Christmas trees and an array B of the same size consisting of the cost of each of the trees (Bi is the cost of tree Ai,
    where 1 ≤ i ≤ size(A)), and you are supposed to choose 3 trees (let's say, indices p, q, and r), such that Ap < Aq < Ar, where p < q < r.
    The cost of these trees is Bp + Bq + Br.
    You are to choose 3 trees such that their total cost is minimum. Return that cost.
    If it is not possible to choose 3 such trees return -1.

    Problem Constraints
    1 <= A[i], B[i] <= 10^9
    3 <= size(A) = size(B) <= 3000

              0  1  2  3  4  5
    eg:  A = [1, 6, 4, 2, 6, 9]
         B = [2, 5, 7, 3, 2, 7]

         Idea one: for every index check if next index tree height is greater than current one if yes then add the cost do it for three and find min cost.
         TC: O(N^3) will give TLE

         Idea two: Fix any index, find the min cost from left satisfying the condition of tree height and then min cost from right satisfying the condition of tree height
          and add it with the current cost and get the min.
         TC: O(N^2)

Q3. Problem Description
    Given an array of integers A, of size N.
    Return the maximum size subarray of A having only non-negative elements. If there are more than one such subarray, return the one having the smallest starting index in A.
    NOTE: It is guaranteed that an answer always exists.

    Problem Constraints
    1 <= N <= 10^5
    -10^9 <= A[i] <= 10^9

    Idea1: count the number of positive element in array and if found any negative element then update the previous count nd previous start index and reset the count.
    if last element is received and it is positive then also update the start index and count.
    input A : 5, 6, -1, 4, 3, 5

Q4. Problem Description
    Write a program to input an integer N from user and print hollow diamond star pattern series of N lines.
    See example for clarifications over the pattern.

    input n = 4
    Output:  ********
             ***  ***
             **    **
             *      *
             *      *
             **    **
             ***  ***
             ********

    Idea: print the upper half of the diamond and then print the lower half of the diamond.
    input n = 4
    Output:  ********
             ***  ***
             **    **
             *      *
             *      *
             **    **
             ***  ***
             ********
   print upper half:
   psudo code for upper half:
    for i = 1 to n:
          for j = 1 to n-i:
                print *
          for j = 1 to 2*i-1:
                if j == 1 or j == 2*i-1:
                 print *
                else:
                 print " "
          for j = 1 to n-i:
                print *
          print new line
